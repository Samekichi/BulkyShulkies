plugins {
	id 'fabric-loom' version '0.2.6-SNAPSHOT'
	id 'com.github.johnrengelman.shadow' version '5.2.0'
	id 'maven-publish'
	id 'checkstyle'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven {
		name = "prospector-fabric"
		url = "https://maven.fabricmc.net/io/github/prospector/modmenu/"
	}
	maven {
		name = "curse"
		url = "https://minecraft.curseforge.com/api/maven/"
	}
	maven {
		name = "Sargunv"
		url = "http://maven.sargunv.s3-website-us-west-2.amazonaws.com/"
	}
	maven {
		name = "Cotton"
		url = "http://server.bbkr.space:8081/artifactory/libs-release/"
	}
	maven {
		name = "Sponge"
		url = "https://repo.spongepowered.org/maven"
	}
	maven {
 		url = "http://server.bbkr.space:8081/artifactory/libs-release"
	}
	maven {
		name = "Jitpack"
		url = "https://www.jitpack.io"
	}
}

logger.lifecycle("""
	=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	Building Cursed Shulker Boxes   

	Version: ${project.mod_version}
	Minecraft Version: ${project.minecraft_version}
	Fabric-Loader Version: ${project.loader_version}
	Fabric-API Version: ${project.fabric_version}
	Cotton-Resources Version: ${project.cotton_resources_version}
	LibCD Version: ${project.libcd_version}
	
	Output files will be in /build/libs
	=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
""")

minecraft {
}

dependencies {
	// Fabric Stuff.
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation ("io.github.prospector:modmenu:${project.modmenu_version}") { // We use our own version of modmenu and REI
		exclude(group : "net.fabricmc.fabric-api")
		exclude module: "RoughlyEnoughItems"
	}

	// Cotton Resources -- Uncomment when 1.15 is pushed
	// modImplementation ("io.github.cottonmc:cotton-resources:${cotton_resources_version}") { // We use our own version of modmenu and REI
	// exclude module: "fabric-api"
	// exclude module: "RoughlyEnoughItems"
	// }
	//include "io.github.cottonmc:cotton-resources:${cotton_resources_version}" // JIJ time

	// Optional Mods - We have this for looking up items and verifying recipes.
	modImplementation ("me.shedaniel:RoughlyEnoughItems:${project.rei_version}") {
		exclude(group : "net.fabricmc.fabric-api")
	}

	// LibCD is how we only load the CottonResources recipes IF CottonResources is present. We only use it at runtime and we also JIJ it out of the box.
	modRuntime ("io.github.cottonmc:LibCD:${project.libcd_version}") {
		exclude(group : "net.fabricmc.fabric-api")
		exclude module: "modmenu"
	}
	include ("io.github.cottonmc:LibCD:${project.libcd_version}") {}

	// Config
	implementation "org.spongepowered:configurate-hocon:${project.configurate_version}"

	// Annotations
	implementation group: 'org.jetbrains', name: 'annotations', version: "${project.jetbrains_annotations}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

checkstyle {
	configFile = rootProject.file("checkstyle.xml")
	toolVersion = '8.25'
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
